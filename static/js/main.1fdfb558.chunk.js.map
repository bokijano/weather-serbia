{"version":3,"sources":["temperature icons/snow.svg","components/Current Temperature/serbia.png","temperature icons/clear-day.svg","temperature icons/partly-cloudy-day.svg","temperature icons/clear-night.svg","temperature icons/cloudy.svg","temperature icons/partly-cloudy-night.svg","temperature icons/fog.svg","temperature icons/rain.svg","temperature icons/sleet.svg","components/Navbar.js","Context.js","components/Current Temperature/CurrentTempList.js","components/Current Temperature/CurrentTemperature.js","components/Daily Temperature/dailyTemp.js","components/Daily Temperature/DailyTemperature.js","components/Long Term Temperature/LongTemp.js","components/Long Term Temperature/LongTermTemperature.js","Home.js","components/Detail Forecast/hourly.js","components/Detail Forecast/daily.js","components/Detail Forecast/detailsPirot.js","components/Detail Forecast/detailsNis.js","components/Detail Forecast/detailsUzice.js","components/Detail Forecast/detailsKragujevac.js","components/Detail Forecast/detailsZajecar.js","components/Detail Forecast/detailsPozarevac.js","components/Detail Forecast/detailsBeograd.js","components/Detail Forecast/detailsNoviSad.js","components/Detail Forecast/detailsSubotica.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","displayDetails","this","props","react_default","a","createElement","className","react_router_dom","onClick","to","Component","ProductContext","React","createContext","ProductProvider","state","proxy","API_KEY","cities","forecastItem","clearday","partlycloudyday","clearnight","partlycloudynight","cloudy","fog","sleet","snow","wind","rain","dataNis","dataPirot","dataUzice","dataKragujevac","dataZajecar","dataPozarevac","dataBeograd","dataNoviSad","dataSubotica","dataAllCities","time","firstDay","secondDay","thirdDay","convertUnix","unixTime","date","Date","year","getFullYear","month","getMonth","day","getDate","getDay","convertUnixHour","hour","getHours","getForecastIcon","icon","_this","jsonData","day1","daily","data","time1","icon1","tempMax1","temperatureMax","tempMin1","temperatureMin","day2","time2","icon2","tempMax2","tempMin2","day3","time3","icon3","tempMax3","tempMin3","setState","api","fetch","json","getValues","temperature","currently","iconCurrently","forecast","element","id","cityID","cityName","city","Object","assign","console","log","_context","t0","_context2","_context3","_context4","_context5","_context6","_context7","_context8","_context9","getTemperaturesNis","getTemperaturesPirot","getTemperaturesUzice","getTemperaturesKragujevac","getTemperaturesZajecar","getTemperaturesPozarevac","getTemperaturesBeograd","getTemperaturesNoviSad","getTemperaturesSubotica","degree","toCelsius","toFixed","Provider","value","objectSpread","children","ProductConsumer","Consumer","CurrentTempList","_this$props$temp","temp","_this$props$value","src","alt","CurrentTemperature","SerbiaMap","CurrentTempList_CurrentTempList","dailyTemp","DailyTemperature","dailyTemp_dailyTemp","LongTemp","LongTermTemperature","LongTemp_LongTemp","App","DailyTemperature_DailyTemperature","CurrentTemperature_CurrentTemperature","LongTermTemperature_LongTermTemperature","hourly","_this$props$hour","_this$props$day","summary","style","color","marginTop","detailsPirot","hourlyTemp","hour1","hour2","hour3","hour4","hour5","day4","day5","getTemperatures","_this$state","map","hourly_hourly","key","daily_daily","App1","displayHomePage","Fragment","Navbar_Navbar","Home","react_router","exath","path","component","DetailsPirot","DetailsNis","DetailsUzice","DetailsKragujevac","DetailsZajecar","DetailsPozarevac","DetailsBeograd","DetailsNoviSad","DetailsSubotica","Boolean","window","location","hostname","match","ReactDOM","render","Context_ProductProvider","App_App1","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1fdfb558.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snow.492aef11.svg\";","module.exports = __webpack_public_path__ + \"static/media/serbia.82ff3005.png\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.4b42731b.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.83043161.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.8c244a47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.33883103.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.73cce30d.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.01bcb6c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5d44f040.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.a0d9e9ae.svg\";","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    const { displayDetails } = this.props;\r\n    return (\r\n      <div className=\"navbar\">\r\n        <h2>Weather Forecast for Serbia</h2>\r\n        <div className=\"details\">\r\n          <button className=\"detailsBtn\">long-term forecast</button>\r\n          <div className=\"detailsContent\">\r\n            <Link onClick={displayDetails} to=\"/detailsPirot\">\r\n              Pirot\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsNis\">\r\n              Niš\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsUzice\">\r\n              Užice\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsKragujevac\">\r\n              Kragujevac\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsZajecar\">\r\n              Zaječar\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsPozarevac\">\r\n              Požarevac\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsBeograd\">\r\n              Beograd\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsNoviSad\">\r\n              Novi Sad\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsSubotica\">\r\n              Subotica\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport clearday from \"./temperature icons/clear-day.svg\";\r\nimport partlycloudyday from \"./temperature icons/partly-cloudy-day.svg\";\r\nimport clearnight from \"./temperature icons/clear-night.svg\";\r\nimport cloudy from \"./temperature icons/cloudy.svg\";\r\nimport partlycloudynight from \"./temperature icons/partly-cloudy-night.svg\";\r\nimport fog from \"./temperature icons/fog.svg\";\r\nimport rain from \"./temperature icons/rain.svg\";\r\nimport sleet from \"./temperature icons/sleet.svg\";\r\nimport snow from \"./temperature icons/snow.svg\";\r\nimport wind from \"./temperature icons/snow.svg\";\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    cities: [\r\n      \"Pirot\",\r\n      \"Niš\",\r\n      \"Užice\",\r\n      \"Kragujevac\",\r\n      \"Zaječar\",\r\n      \"Požarevac\",\r\n      \"Beograd\",\r\n      \"Novi Sad\",\r\n      \"Subotica\"\r\n    ],\r\n    forecastItem: [\r\n      clearday,\r\n      partlycloudyday,\r\n      clearnight,\r\n      partlycloudynight,\r\n      cloudy,\r\n      fog,\r\n      sleet,\r\n      snow,\r\n      wind,\r\n      rain\r\n    ],\r\n    dataNis: {},\r\n    dataPirot: {},\r\n    dataUzice: {},\r\n    dataKragujevac: {},\r\n    dataZajecar: {},\r\n    dataPozarevac: {},\r\n    dataBeograd: {},\r\n    dataNoviSad: {},\r\n    dataSubotica: {},\r\n    dataAllCities: [],\r\n    time: \"\",\r\n    firstDay: \"\",\r\n    secondDay: \"\",\r\n    thirdDay: \"\"\r\n  };\r\n\r\n  getValues(jsonData) {\r\n    let day1 = jsonData.daily.data[1];\r\n    let time1 = day1.time;\r\n    let icon1 = day1.icon;\r\n    let tempMax1 = day1.temperatureMax;\r\n    let tempMin1 = day1.temperatureMin;\r\n    let firstDay = {time1, icon1, tempMax1, tempMin1}\r\n\r\n    let day2 = jsonData.daily.data[2];\r\n    let time2 = day2.time;\r\n    let icon2 = day2.icon;\r\n    let tempMax2 = day2.temperatureMax;\r\n    let tempMin2 = day2.temperatureMin;\r\n    let secondDay = {time2, icon2, tempMax2, tempMin2}\r\n    \r\n    let day3 = jsonData.daily.data[3];\r\n    let time3 = day3.time;\r\n    let icon3 = day3.icon;\r\n    let tempMax3 = day3.temperatureMax;\r\n    let tempMin3 = day3.temperatureMin;\r\n    let thirdDay = {time3, icon3, tempMax3, tempMin3}    \r\n    this.setState({\r\n      firstDay: firstDay,\r\n      secondDay: secondDay,\r\n      thirdDay: thirdDay\r\n    })\r\n  }\r\n\r\n  async getTemperaturesNis() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.32472, 21.90333`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const {\r\n        temperatureMin,\r\n        temperatureMax,\r\n        icon,\r\n        time\r\n      } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };    \r\n      let element = { id: 1 };\r\n      let cityID = { cityID: \"nis\" }\r\n      let cityName = { city: \"Niš\" };\r\n      let dataNis = Object.assign(element, cityName, forecast, cityID,\r\n                    this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataNis: dataNis,\r\n        time: time\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesPirot() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.15306, 22.58611`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 2 };\r\n      let cityID = { cityID: \"pirot\" }\r\n      let cityName = { city: \"Pirot\" };\r\n      let dataPirot = Object.assign(forecast, element, cityName, cityID,\r\n                     this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataPirot: dataPirot\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesUzice() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.85861, 19.84878`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 3 };\r\n      let cityID = { cityID: \"uzice\" }\r\n      let cityName = { city: \"Užice\" };\r\n      let dataUzice = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataUzice: dataUzice\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesKragujevac() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.01667, 20.91667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 4 };\r\n      let cityID = { cityID: \"kragujevac\" }\r\n      let cityName = { city: \"Kragujevac\" };\r\n      let dataKragujevac = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataKragujevac: dataKragujevac\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesZajecar() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.90358, 22.26405`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 5 };\r\n      let cityID = { cityID: \"zajecar\" }\r\n      let cityName = { city: \"Zaječar\" };\r\n      let dataZajecar = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataZajecar: dataZajecar\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesPozarevac() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.62133, 21.18782`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 6 };\r\n      let cityID = { cityID: \"pozarevac\" }\r\n      let cityName = { city: \"Požarevac\" };\r\n      let dataPozarevac = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataPozarevac: dataPozarevac\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesBeograd() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.80401, 20.46513`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 7 };\r\n      let cityID = { cityID: \"beograd\" }\r\n      let cityName = { city: \"Beograd\" };\r\n      let dataBeograd = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataBeograd: dataBeograd\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesNoviSad() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/45.25167, 19.83694`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 8 };\r\n      let cityID = { cityID: \"novi-sad\" }\r\n      let cityName = { city: \"Novi Sad\" };\r\n      let dataNoviSad = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataNoviSad: dataNoviSad\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async getTemperaturesSubotica() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/46.1, 19.66667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      this.getValues(jsonData);\r\n      const { temperatureMin, temperatureMax, icon } = jsonData.daily.data[0];\r\n      const { temperature } = jsonData.currently;\r\n      let iconCurrently = jsonData.currently.icon;\r\n      let forecast = { iconCurrently, temperature, temperatureMax, temperatureMin, icon };\r\n      let element = { id: 9 };\r\n      let cityID = { cityID: \"subotica\" }\r\n      let cityName = { city: \"Subotica\" };\r\n      let dataSubotica = Object.assign(forecast, element, cityName, cityID,\r\n         this.state.firstDay, this.state.secondDay, this.state.thirdDay);\r\n      this.setState({\r\n        dataSubotica: dataSubotica\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getTemperaturesNis();\r\n    this.getTemperaturesPirot();\r\n    this.getTemperaturesUzice();\r\n    this.getTemperaturesKragujevac();\r\n    this.getTemperaturesZajecar();\r\n    this.getTemperaturesPozarevac();\r\n    this.getTemperaturesBeograd();\r\n    this.getTemperaturesNoviSad();\r\n    this.getTemperaturesSubotica();\r\n  }\r\n\r\n\r\n  convertUnix = unixTime => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n\r\n    let date = new Date(unixTime * 1000);\r\n    let year = date.getFullYear();\r\n    let month = months[date.getMonth()];\r\n    let day = date.getDate();\r\n    let dayOfWeek = days[date.getDay()];\r\n\r\n    let currentDate = dayOfWeek + \" \" + day + \". \" + month + \" \" + year + \".\";\r\n    return currentDate;\r\n  };\r\n  convertUnixHour = unixTime => {\r\n    let date = new Date(unixTime * 1000);\r\n    let hour = date.getHours();\r\n\r\n    if (\r\n      hour == \"0\" ||\r\n      hour == \"1\" ||\r\n      hour == \"2\" ||\r\n      hour == \"3\" ||\r\n      hour == \"4\" ||\r\n      hour == \"5\" ||\r\n      hour == \"6\" ||\r\n      hour == \"7\" ||\r\n      hour == \"8\" ||\r\n      hour == \"9\"\r\n    ) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    let currentHour = hour;\r\n\r\n    return currentHour;\r\n  };\r\n  toCelsius(degree) {\r\n    let toCelsius = (((degree - 32) * 5) / 9).toFixed(0);\r\n    return toCelsius;\r\n  }\r\n  getForecastIcon = icon => {\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        return this.state.forecastItem[0];\r\n        break;\r\n      case \"clear-night\":\r\n        return this.state.forecastItem[2];\r\n        break;\r\n      case \"partly-cloudy-day\":\r\n        return this.state.forecastItem[1];\r\n        break;\r\n      case \"partly-cloudy-night\":\r\n        return this.state.forecastItem[3];\r\n        break;\r\n      case \"cloudy\":\r\n        return this.state.forecastItem[4];\r\n        break;\r\n      case \"rain\":\r\n        return this.state.forecastItem[9];\r\n        break;\r\n      case \"sleet\":\r\n        return this.state.forecastItem[6];\r\n        break;\r\n      case \"snow\":\r\n        return this.state.forecastItem[7];\r\n        break;\r\n      case \"wind\":\r\n        return this.state.forecastItem[8];\r\n        break;\r\n      case \"fog\":\r\n        return this.state.forecastItem[5];\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          convertUnix: this.convertUnix,\r\n          toCelsius: this.toCelsius,\r\n          getForecastIcon: this.getForecastIcon,\r\n          convertUnixHour: this.convertUnixHour\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductConsumer, ProductProvider };\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class CurrentTempList extends Component {\r\n  render() {\r\n    const { cityID, city, temperature, iconCurrently } = this.props.temp;\r\n    const { toCelsius, getForecastIcon } = this.props.value;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <li id={cityID} className=\"city-pos\">\r\n            <h4>{city}</h4>\r\n            <div className=\"temperature-content\">\r\n              <img src={getForecastIcon(iconCurrently)} alt=\"no picture\" />\r\n              <h3 className=\"temperature-degree\">{toCelsius(temperature)}</h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SerbiaMap from \"./serbia.png\";\r\nimport \"./CurrentTemperature.css\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\nimport CurrentTempList from \"./CurrentTempList.js\";\r\n\r\nexport default class CurrentTemperature extends Component {\r\n  render() {\r\n    return (\r\n      // map with 9 cities and it's temperature\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"map-content\">\r\n            <img className=\"img-pos\" src={SerbiaMap} alt=\"serbia map\" />\r\n\r\n            <ul className=\"list-content\">\r\n              <CurrentTempList temp={value.dataPirot} value={value} />\r\n              <CurrentTempList temp={value.dataNis} value={value} />\r\n              <CurrentTempList temp={value.dataUzice} value={value} />\r\n              <CurrentTempList temp={value.dataKragujevac} value={value} />\r\n              <CurrentTempList temp={value.dataZajecar} value={value} />\r\n              <CurrentTempList temp={value.dataPozarevac} value={value} />\r\n              <CurrentTempList temp={value.dataBeograd} value={value} />\r\n              <CurrentTempList temp={value.dataNoviSad} value={value} />\r\n              <CurrentTempList temp={value.dataSubotica} value={value} />\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class dailyTemp extends Component {\r\n  render() {\r\n    const { city, temperatureMin, temperatureMax, icon } = this.props.temp;\r\n    const { toCelsius, getForecastIcon } = this.props.value;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"curr-city\">\r\n            <h2 className=\"city-name\">{city}</h2>\r\n\r\n            <img id=\"temp-icon\" src={getForecastIcon(icon)} alt=\"no picture\" />\r\n            <h5 className=\"maxTemp\">\r\n              <span id=\"max\">{toCelsius(temperatureMax)} C</span>\r\n              <span id=\"text\">MAX</span>\r\n            </h5>\r\n            <h5 className=\"minTemp\">\r\n              <span id=\"min\">{toCelsius(temperatureMin)} C</span>\r\n              <span id=\"text\">MIN</span>\r\n            </h5>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./DailyTemperature.css\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\nimport DailyTemp from \"./dailyTemp.js\";\r\n\r\nexport default class DailyTemperature extends Component {\r\n  render() {\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"current-temperatures\">\r\n            <h2 className=\"currDate\">{value.convertUnix(value.time)}</h2>\r\n            <hr></hr>\r\n            <DailyTemp temp={value.dataPirot} value={value} />\r\n            <DailyTemp temp={value.dataNis} value={value} />\r\n            <DailyTemp temp={value.dataUzice} value={value} />\r\n            <DailyTemp temp={value.dataKragujevac} value={value} />\r\n            <DailyTemp temp={value.dataZajecar} value={value} />\r\n            <DailyTemp temp={value.dataPozarevac} value={value} />\r\n            <DailyTemp temp={value.dataBeograd} value={value} />\r\n            <DailyTemp temp={value.dataNoviSad} value={value} />\r\n            <DailyTemp temp={value.dataSubotica} value={value} />\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class LongTemp extends Component {\r\n  render() {\r\n    const {\r\n      city,\r\n      icon1,\r\n      icon2,\r\n      icon3,\r\n      tempMax1,\r\n      tempMax2,\r\n      tempMax3,\r\n      tempMin1,\r\n      tempMin2,\r\n      tempMin3\r\n    } = this.props.temp;\r\n    const { toCelsius, getForecastIcon } = this.props.value;\r\n    return (\r\n      <div className=\"long-city\">\r\n        <h4 className=\"city-name\">{city}</h4>\r\n        <div className=\"longForecast\">\r\n          <hr></hr>\r\n          <div className=\"firstDay\">\r\n            <img\r\n              className=\"first\"\r\n              id=\"temp-icon\"\r\n              src={getForecastIcon(icon1)}\r\n              alt=\"no picture\"\r\n            />\r\n            <div className=\"forecastFirst\">\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{toCelsius(tempMax1)} C</span>\r\n                <span id=\"text\">max</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{toCelsius(tempMin1)} C</span>\r\n                <span id=\"minText\">min</span>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n          <div className=\"secondDay\">\r\n            <img id=\"temp-icon\" src={getForecastIcon(icon2)} alt=\"no picture\" />\r\n            <div className=\"forecastFirst\">\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{toCelsius(tempMax2)} C</span>\r\n                <span id=\"text\">max</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{toCelsius(tempMin2)} C</span>\r\n                <span id=\"minText\">min</span>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n          <div className=\"thirdDay\">\r\n            <img id=\"temp-icon\" src={getForecastIcon(icon3)} alt=\"no picture\" />\r\n            <div className=\"forecastFirst\">\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{toCelsius(tempMax3)} C</span>\r\n                <span id=\"text\">max</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{toCelsius(tempMin3)} C</span>\r\n                <span id=\"minText\">min</span>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./LongTermTemperature.css\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\nimport LongTemp from \"./LongTemp.js\";\r\n\r\nexport default class LongTermTemperature extends Component {\r\n  render() {\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"long-temperature\">\r\n            <div className=\"long-temp\">\r\n              <hr></hr>\r\n              <h4 className=\"dayFirst\">\r\n                {value.convertUnix(value.dataNis.time1)}\r\n              </h4>\r\n              <hr></hr>\r\n              <h4 className=\"daySecond\">\r\n                {value.convertUnix(value.dataNis.time2)}\r\n              </h4>\r\n              <hr></hr>\r\n              <h4 className=\"dayThird\">\r\n                {value.convertUnix(value.dataNis.time3)}\r\n              </h4>\r\n              <hr></hr>\r\n            </div>\r\n            <LongTemp temp={value.dataPirot} value={value} />\r\n            <LongTemp temp={value.dataNis} value={value} />\r\n            <LongTemp temp={value.dataUzice} value={value} />\r\n            <LongTemp temp={value.dataKragujevac} value={value} />\r\n            <LongTemp temp={value.dataZajecar} value={value} />\r\n            <LongTemp temp={value.dataPozarevac} value={value} />\r\n            <LongTemp temp={value.dataBeograd} value={value} />\r\n            <LongTemp temp={value.dataNoviSad} value={value} />\r\n            <LongTemp temp={value.dataSubotica} value={value} />\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./forecast.css\";\nimport CurrentTemperature from \"./components/Current Temperature/CurrentTemperature.js\";\nimport DailyTemperature from \"./components/Daily Temperature/DailyTemperature.js\";\nimport LongTermTemperature from \"./components/Long Term Temperature/LongTermTemperature.js\";\nimport { ProductConsumer } from \"./Context.js\";\n\nclass App extends Component {\n  render() {\n    return (\n      <ProductConsumer>\n        {value => (\n          <div className=\"weather-container\">\n            <DailyTemperature />\n            <CurrentTemperature />\n            <LongTermTemperature />\n          </div>\n        )}\n      </ProductConsumer>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class hourly extends Component {\r\n  render() {\r\n    const { time, icon, temperature } = this.props.hour;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div>\r\n            <h5 className=\"hour-time\">{value.convertUnixHour(time)} h</h5>\r\n            <img\r\n              id=\"hourly-icon\"\r\n              src={value.getForecastIcon(icon)}\r\n              alt=\"no picture\"\r\n            />\r\n            <h5 className=\"temp-celsius\">{value.toCelsius(temperature)} C</h5>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class daily extends Component {\r\n  render() {\r\n    const {\r\n      time,\r\n      icon,\r\n      temperatureMin,\r\n      temperatureMax,\r\n      summary\r\n    } = this.props.day;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"day-temp\">\r\n            <h6>{value.convertUnix(time)}</h6>\r\n            <div className=\"long-temp\">\r\n              <img\r\n                id=\"long-icon\"\r\n                src={value.getForecastIcon(icon)}\r\n                alt=\"no picture\"\r\n              />\r\n              <p className=\"long-max\">\r\n                <span style={{ color: \"red\" }}>\r\n                  {value.toCelsius(temperatureMax)} C\r\n                </span>\r\n                <span> max</span>\r\n              </p>\r\n              <p className=\"long-min\">\r\n                <span style={{ color: \"green\" }}>\r\n                  {value.toCelsius(temperatureMin)} C\r\n                </span>\r\n                <span> min</span>\r\n              </p>\r\n              <h6 style={{ marginTop: \"10px\", color: \"black\" }}>{summary}</h6>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.15306, 22.58611`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[0]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.32472, 21.90333`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[1]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.85861, 19.84878`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[2]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.01667, 20.91667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[3]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.90358, 22.26405`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[4]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.62133, 21.18782`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[5]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.80401, 20.46513`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[6]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/45.25167, 19.83694`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[7]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/46.1, 19.66667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[8]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport Home from \"./Home.js\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DetailsPirot from \"./components/Detail Forecast/detailsPirot.js\";\r\nimport DetailsNis from \"./components/Detail Forecast/detailsNis.js\";\r\nimport DetailsUzice from \"./components/Detail Forecast/detailsUzice.js\";\r\nimport DetailsKragujevac from \"./components/Detail Forecast/detailsKragujevac.js\";\r\nimport DetailsZajecar from \"./components/Detail Forecast/detailsZajecar.js\";\r\nimport DetailsPozarevac from \"./components/Detail Forecast/detailsPozarevac.js\";\r\nimport DetailsBeograd from \"./components/Detail Forecast/detailsBeograd.js\";\r\nimport DetailsNoviSad from \"./components/Detail Forecast/detailsNoviSad.js\";\r\nimport DetailsSubotica from \"./components/Detail Forecast/detailsSubotica.js\";\r\n\r\nexport default class App1 extends Component {\r\n  state = {\r\n    displayHomePage: true\r\n  };\r\n  displayDetails = () => {\r\n    this.setState({\r\n      displayHomePage: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar displayDetails={this.displayDetails} />\r\n\r\n        {this.state.displayHomePage ? (\r\n          <Home />\r\n        ) : (\r\n          <Switch>\r\n            <Route exath path=\"/home\" component={Home} />\r\n            <Route path=\"/detailsPirot\" component={DetailsPirot} />\r\n            <Route path=\"/detailsNis\" component={DetailsNis} />\r\n            <Route path=\"/detailsUzice\" component={DetailsUzice} />\r\n            <Route path=\"/detailsKragujevac\" component={DetailsKragujevac} />\r\n            <Route path=\"/detailsZajecar\" component={DetailsZajecar} />\r\n            <Route path=\"/detailsPozarevac\" component={DetailsPozarevac} />\r\n            <Route path=\"/detailsBeograd\" component={DetailsBeograd} />\r\n            <Route path=\"/detailsNoviSad\" component={DetailsNoviSad} />\r\n            <Route path=\"/detailsSubotica\" component={DetailsSubotica} />\r\n          </Switch>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ProductProvider } from \"./Context\";\n\nReactDOM.render(\n  <ProductProvider>\n    <Router>\n      <App />\n    </Router>\n  </ProductProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}