{"version":3,"sources":["temperature icons/snow.svg","temperature icons/clear-day.svg","temperature icons/partly-cloudy-day.svg","temperature icons/clear-night.svg","temperature icons/cloudy.svg","temperature icons/partly-cloudy-night.svg","temperature icons/fog.svg","temperature icons/rain.svg","temperature icons/sleet.svg","components/Current Temperature/serbia.png","components/Navbar.js","components/Current Temperature/CurrentTemperature.js","components/Daily Temperature/DailyTemperature.js","components/Long Term Temperature/LongTermTemperature.js","Home.js","Context.js","components/Detail Forecast/hourly.js","components/Detail Forecast/daily.js","components/Detail Forecast/detailsPirot.js","components/Detail Forecast/detailsNis.js","components/Detail Forecast/detailsUzice.js","components/Detail Forecast/detailsKragujevac.js","components/Detail Forecast/detailsZajecar.js","components/Detail Forecast/detailsPozarevac.js","components/Detail Forecast/detailsBeograd.js","components/Detail Forecast/detailsNoviSad.js","components/Detail Forecast/detailsSubotica.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","displayDetails","this","props","react_default","a","createElement","className","react_router_dom","onClick","to","Component","CurrentTemperature","lat","long","temp","icons","cityID","arr","cities","getIcon","api","proxy","API_KEY","fetch","data","json","jsonData","currently","temperature","icon","temperatureC","toFixed","cityName","result","document","querySelector","innerHTML","getElementById","textContent","iconSrc","console","log","_context","t0","getTemperatures","src","SerbiaMap","alt","DailyTemperature","state","displayDetailsTemp","forecastItem","convertUnix","daily","temperatureMin","temperatureMax","time","tempMin","tempMax","iconImg","date","t1","LongTermTemperature","getForecastIcon","_this","toCelsius","time1","minTemp","maxTemp","icon1","iconImg1","time2","minTemp2","maxTemp2","icon2","iconImg2","time3","minTemp3","maxTemp3","icon3","iconImg3","App","clearday","partlycloudyday","clearnight","partlycloudynight","cloudy","fog","sleet","snow","wind","rain","detailsDisplay","unixTime","Date","year","getFullYear","month","getMonth","day","getDate","getDay","setState","degree","Fragment","DailyTemperature_DailyTemperature","CurrentTemperature_CurrentTemperature","LongTermTemperature_LongTermTemperature","ProductContext","React","createContext","ProductProvider","convertUnixHour","hour","getHours","Provider","value","Object","objectSpread","children","ProductConsumer","Consumer","hourly","_this$props$hour","id","_this$props$day","summary","style","color","marginTop","detailsPirot","hourlyTemp","dailyTemp","hour1","hour2","hour3","hour4","hour5","day1","day2","day3","day4","day5","_this$state","map","hourly_hourly","key","daily_daily","App1","displayHomePage","Navbar_Navbar","Home","react_router","exath","path","component","DetailsPirot","DetailsNis","DetailsUzice","DetailsKragujevac","DetailsZajecar","DetailsPozarevac","DetailsBeograd","DetailsNoviSad","DetailsSubotica","Boolean","window","location","hostname","match","ReactDOM","render","Context_ProductProvider","App_App1","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.34ff7665.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/snow.492aef11.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-day.4b42731b.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.83043161.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.8c244a47.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.33883103.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.73cce30d.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.01bcb6c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.5d44f040.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.a0d9e9ae.svg\";","module.exports = __webpack_public_path__ + \"static/media/serbia.82ff3005.png\";","import React, { Component } from \"react\";\r\nimport \"./Navbar.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    const { displayDetails } = this.props;\r\n    return (\r\n      <div className=\"navbar\">\r\n        <h2>Weather Forecast for Serbia</h2>\r\n        <div className=\"details\">\r\n          <button className=\"detailsBtn\">long-term forecast</button>\r\n          <div className=\"detailsContent\">\r\n            <Link onClick={displayDetails} to=\"/detailsPirot\">\r\n              Pirot\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsNis\">\r\n              Niš\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsUzice\">\r\n              Užice\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsKragujevac\">\r\n              Kragujevac\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsZajecar\">\r\n              Zaječar\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsPozarevac\">\r\n              Požarevac\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsBeograd\">\r\n              Beograd\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsNoviSad\">\r\n              Novi Sad\r\n            </Link>\r\n            <Link onClick={displayDetails} to=\"/detailsSubotica\">\r\n              Subotica\r\n            </Link>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SerbiaMap from \"./serbia.png\";\r\nimport \"./CurrentTemperature.css\";\r\n\r\nexport default class CurrentTemperature extends Component {\r\n  async getTemperatures(lat, long, temp, icons, cityID, arr) {\r\n    try {\r\n      const { cities, getIcon } = this.props;\r\n\r\n      const api = `${this.props.proxy}https://api.darksky.net/forecast/${this.props.API_KEY}/${lat},${long}`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, icon } = jsonData.currently;\r\n\r\n      let temperatureC = (((temperature - 32) * 5) / 9).toFixed(0);\r\n\r\n      let cityName = cities[arr];\r\n      let id = cityID;\r\n\r\n      let result = `\r\n      \r\n      <li id=\"${id}\" class=\"city-pos\">\r\n        <h4>${cityName}</h4>\r\n        <div class=\"temperature-content\">\r\n          <img id=${icons} src=\"\" alt=\"\" />\r\n          <h3 id=${temp} class=\"temperature-degree\">35</h3>\r\n          <span>C</span>\r\n        </div>\r\n      </li>\r\n         `;\r\n\r\n      document.querySelector(\".list-content\").innerHTML += result;\r\n      document.getElementById(temp).textContent = temperatureC;\r\n\r\n      let iconSrc = document.getElementById(icons);\r\n\r\n      getIcon(icon, iconSrc);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures(\r\n      43.15306,\r\n      22.58611,\r\n      \"temPirot\",\r\n      \"iconPirot\",\r\n      \"pirot\",\r\n      0\r\n    );\r\n    this.getTemperatures(43.32472, 21.90333, \"temNis\", \"iconNis\", \"nis\", 1);\r\n    this.getTemperatures(\r\n      43.85861,\r\n      19.84878,\r\n      \"temUzice\",\r\n      \"iconUzice\",\r\n      \"uzice\",\r\n      2\r\n    );\r\n    this.getTemperatures(\r\n      44.01667,\r\n      20.91667,\r\n      \"temKragujevac\",\r\n      \"iconKragujevac\",\r\n      \"kragujevac\",\r\n      3\r\n    );\r\n    this.getTemperatures(\r\n      43.90358,\r\n      22.26405,\r\n      \"temZajecar\",\r\n      \"iconZajecar\",\r\n      \"zajecar\",\r\n      4\r\n    );\r\n    this.getTemperatures(\r\n      44.62133,\r\n      21.18782,\r\n      \"temPozarevac\",\r\n      \"iconPozarevac\",\r\n      \"pozarevac\",\r\n      5\r\n    );\r\n    this.getTemperatures(\r\n      44.80401,\r\n      20.46513,\r\n      \"temBeograd\",\r\n      \"iconBeograd\",\r\n      \"beograd\",\r\n      6\r\n    );\r\n    this.getTemperatures(\r\n      45.25167,\r\n      19.83694,\r\n      \"temNoviSad\",\r\n      \"iconNoviSad\",\r\n      \"novi-sad\",\r\n      7\r\n    );\r\n    this.getTemperatures(\r\n      46.1,\r\n      19.66667,\r\n      \"temSubotica\",\r\n      \"iconSubotica\",\r\n      \"subotica\",\r\n      8\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // map with 9 cities and it's temperature\r\n      <div className=\"map-content\">\r\n        <img className=\"img-pos\" src={SerbiaMap} alt=\"serbia map\" />\r\n        <ul className=\"list-content\"></ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./DailyTemperature.css\";\r\n\r\nexport default class DailyTemperature extends Component {\r\n  state = {\r\n    displayDetailsTemp: \"\"\r\n  };\r\n  async getTemperatures(lat, long, arr) {\r\n    try {\r\n      const {\r\n        proxy,\r\n        API_KEY,\r\n        cities,\r\n        forecastItem,\r\n        convertUnix\r\n      } = this.props;\r\n\r\n      const api = `${proxy}https://api.darksky.net/forecast/${API_KEY}/${lat},${long}`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const {\r\n        temperatureMin,\r\n        temperatureMax,\r\n        icon,\r\n        time\r\n      } = jsonData.daily.data[0];\r\n\r\n      let tempMin = (((temperatureMin - 32) * 5) / 9).toFixed(0);\r\n      let tempMax = (((temperatureMax - 32) * 5) / 9).toFixed(0);\r\n\r\n      let cityName = cities[arr];\r\n\r\n      let iconImg = \"\";\r\n\r\n      switch (icon) {\r\n        case \"clear-day\":\r\n          iconImg = forecastItem[0];\r\n          break;\r\n        case \"clear-night\":\r\n          iconImg = forecastItem[2];\r\n          break;\r\n        case \"partly-cloudy-day\":\r\n          iconImg = forecastItem[1];\r\n          break;\r\n        case \"partly-cloudy-night\":\r\n          iconImg = forecastItem[3];\r\n          break;\r\n        case \"cloudy\":\r\n          iconImg = forecastItem[4];\r\n          break;\r\n        case \"rain\":\r\n          iconImg = forecastItem[9];\r\n          break;\r\n        case \"sleet\":\r\n          iconImg = forecastItem[6];\r\n          break;\r\n        case \"snow\":\r\n          iconImg = forecastItem[7];\r\n          break;\r\n        case \"wind\":\r\n          iconImg = forecastItem[8];\r\n          break;\r\n        case \"fog\":\r\n          iconImg = forecastItem[5];\r\n          break;\r\n      }\r\n\r\n      let date = convertUnix(time);\r\n\r\n      let result = `\r\n      <div class=\"curr-city\">\r\n       <h2 class=\"city-name\">${cityName}</h2>\r\n       \r\n       <img id=\"temp-icon\" src=${iconImg} alt=\"no picture\" />\r\n       <h5 class=\"maxTemp\"><span id=\"max\">${tempMax} C</span><span id=\"text\">MAX</span></h5>\r\n       <h5 class=\"minTemp\"><span id=\"min\">${tempMin} C</span><span id=\"text\">MIN</span></h5>\r\n      </div> \r\n      `;\r\n      document.querySelector(\".current-temperatures\").innerHTML += result;\r\n\r\n      document.querySelector(\".currDate\").innerHTML = date;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures(43.15306, 22.58611, 0);\r\n    this.getTemperatures(43.32472, 21.90333, 1);\r\n    this.getTemperatures(43.85861, 19.84878, 2);\r\n    this.getTemperatures(44.01667, 20.91667, 3);\r\n    this.getTemperatures(43.90358, 22.26405, 4);\r\n    this.getTemperatures(44.62133, 21.18782, 5);\r\n    this.getTemperatures(44.80401, 20.46513, 6);\r\n    this.getTemperatures(45.25167, 19.83694, 7);\r\n    this.getTemperatures(46.1, 19.66667, 8);\r\n  }\r\n  displayDetails = () => {\r\n    console.log(\"work\");\r\n  };\r\n  render() {\r\n    return (\r\n        <div className=\"current-temperatures\">\r\n          <h2 className=\"currDate\"></h2>\r\n\r\n          <hr></hr>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./LongTermTemperature.css\";\r\n\r\nexport default class LongTermTemperature extends Component {\r\n  async getTemperatures(lat, long, arr, icons) {\r\n    try {\r\n      const {\r\n        proxy,\r\n        API_KEY,\r\n        cities,\r\n        getIcon,\r\n        convertUnix,\r\n        toCelsius,\r\n        forecastItem\r\n      } = this.props;\r\n\r\n      const api = `${proxy}https://api.darksky.net/forecast/${API_KEY}/${lat},${long}`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      //forecast for tomorow\r\n      const time1 = jsonData.daily.data[1].time;\r\n      document.querySelector(\".dayFirst\").textContent = convertUnix(time1);\r\n      const minTemp = toCelsius(jsonData.daily.data[1].temperatureMin);\r\n      const maxTemp = toCelsius(jsonData.daily.data[1].temperatureMax);\r\n      const icon1 = jsonData.daily.data[1].icon;\r\n      let iconImg1 = this.getForecastIcon(icon1);\r\n\r\n      //forecast for day after tomorow\r\n      const time2 = jsonData.daily.data[2].time;\r\n      document.querySelector(\".daySecond\").textContent = convertUnix(time2);\r\n      const minTemp2 = toCelsius(jsonData.daily.data[2].temperatureMin);\r\n      const maxTemp2 = toCelsius(jsonData.daily.data[2].temperatureMax);\r\n      const icon2 = jsonData.daily.data[2].icon;\r\n      let iconImg2 = this.getForecastIcon(icon2);\r\n\r\n      //forecast for second day after tomorow\r\n      const time3 = jsonData.daily.data[3].time;\r\n      document.querySelector(\".dayThird\").textContent = convertUnix(time3);\r\n      const minTemp3 = toCelsius(jsonData.daily.data[3].temperatureMin);\r\n      const maxTemp3 = toCelsius(jsonData.daily.data[3].temperatureMax);\r\n      const icon3 = jsonData.daily.data[3].icon;\r\n      let iconImg3 = this.getForecastIcon(icon3);\r\n\r\n      const cityName = cities[arr];\r\n\r\n      let result = `\r\n        <div class=\"long-city\">\r\n          <h4 class=\"city-name\">${cityName}</h4>\r\n\r\n          <div class=\"longForecast\">\r\n           <hr>\r\n           <div class=\"firstDay\">\r\n             <img class=\"first\" id=\"temp-icon\" src=${iconImg1} alt=\"no picture\" />\r\n             <div class=\"forecastFirst\">\r\n               <h5 class=\"maxTemp\">\r\n                 <span id=\"max\">${maxTemp} C</span>\r\n                 <span id=\"text\">max</span> \r\n               </h5>\r\n               <h5 class=\"minTemp\">\r\n                 <span id=\"min\">${minTemp} C</span>\r\n                 <span id=\"minText\">min</span>                   \r\n               </h5>\r\n             </div>\r\n           </div>\r\n           <hr>\r\n\r\n           <div class=\"secondDay\">\r\n           <img id=\"temp-icon\" src=${iconImg2} alt=\"no picture\" />\r\n           <div class=\"forecastFirst\">\r\n             <h5 class=\"maxTemp\">\r\n               <span id=\"max\">${maxTemp2} C</span>\r\n               <span id=\"text\">max</span> \r\n             </h5>\r\n             <h5 class=\"minTemp\">\r\n               <span id=\"min\">${minTemp2} C</span>\r\n               <span id=\"minText\">min</span>                   \r\n             </h5>\r\n           </div>\r\n         </div>\r\n         <hr>\r\n\r\n         <div class=\"thirdDay\">\r\n         <img id=\"temp-icon\" src=${iconImg3} alt=\"no picture\" />\r\n         <div class=\"forecastFirst\">\r\n           <h5 class=\"maxTemp\">\r\n             <span id=\"max\">${maxTemp3} C</span>\r\n             <span id=\"text\">max</span> \r\n           </h5>\r\n           <h5 class=\"minTemp\">\r\n             <span id=\"min\">${minTemp3} C</span>\r\n             <span id=\"minText\">min</span>                   \r\n           </h5>\r\n         </div>\r\n       </div>\r\n       <hr>\r\n      </div>\r\n    </div>\r\n      `;\r\n\r\n      document.querySelector(\".long-temperature\").innerHTML += result;\r\n\r\n      //let icons = document.getElementById(\"temp-icon\");\r\n      //getIcon(icon1, icons);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures(43.15306, 22.58611, 0);\r\n    this.getTemperatures(43.32472, 21.90333, 1);\r\n    this.getTemperatures(43.85861, 19.84878, 2);\r\n    this.getTemperatures(44.01667, 20.91667, 3);\r\n    this.getTemperatures(43.90358, 22.26405, 4);\r\n    this.getTemperatures(44.62133, 21.18782, 5);\r\n    this.getTemperatures(44.80401, 20.46513, 6);\r\n    this.getTemperatures(45.25167, 19.83694, 7);\r\n    this.getTemperatures(46.1, 19.66667, 8);\r\n  }\r\n  getForecastIcon = icon => {\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        return this.props.forecastItem[0];\r\n        break;\r\n      case \"clear-night\":\r\n        return this.props.forecastItem[2];\r\n        break;\r\n      case \"partly-cloudy-day\":\r\n        return this.props.forecastItem[1];\r\n        break;\r\n      case \"partly-cloudy-night\":\r\n        return this.props.forecastItem[3];\r\n        break;\r\n      case \"cloudy\":\r\n        return this.props.forecastItem[4];\r\n        break;\r\n      case \"rain\":\r\n        return this.props.forecastItem[9];\r\n        break;\r\n      case \"sleet\":\r\n        return this.props.forecastItem[6];\r\n        break;\r\n      case \"snow\":\r\n        return this.props.forecastItem[7];\r\n        break;\r\n      case \"wind\":\r\n        return this.props.forecastItem[8];\r\n        break;\r\n      case \"fog\":\r\n        return this.props.forecastItem[5];\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"long-temperature\">\r\n        <div className=\"long-temp\">\r\n          <hr></hr>\r\n          <h4 className=\"dayFirst\">27</h4>\r\n          <hr></hr>\r\n          <h4 className=\"daySecond\">28</h4>\r\n          <hr></hr>\r\n          <h4 className=\"dayThird\">28</h4>\r\n          <hr></hr>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./forecast.css\";\nimport CurrentTemperature from \"./components/Current Temperature/CurrentTemperature.js\";\nimport DailyTemperature from \"./components/Daily Temperature/DailyTemperature.js\";\nimport LongTermTemperature from \"./components/Long Term Temperature/LongTermTemperature.js\";\nimport clearday from \"./temperature icons/clear-day.svg\";\nimport partlycloudyday from \"./temperature icons/partly-cloudy-day.svg\";\nimport clearnight from \"./temperature icons/clear-night.svg\";\nimport cloudy from \"./temperature icons/cloudy.svg\";\nimport partlycloudynight from \"./temperature icons/partly-cloudy-night.svg\";\nimport fog from \"./temperature icons/fog.svg\";\nimport rain from \"./temperature icons/rain.svg\";\nimport sleet from \"./temperature icons/sleet.svg\";\nimport snow from \"./temperature icons/snow.svg\";\nimport wind from \"./temperature icons/snow.svg\";\nimport { Route } from \"react-router-dom\";\n\nclass App extends Component {\n  state = {\n    cities: [\n      \"Pirot\",\n      \"Niš\",\n      \"Užice\",\n      \"Kragujevac\",\n      \"Zaječar\",\n      \"Požarevac\",\n      \"Beograd\",\n      \"Novi Sad\",\n      \"Subotica\"\n    ],\n    forecastItem: [\n      clearday,\n      partlycloudyday,\n      clearnight,\n      partlycloudynight,\n      cloudy,\n      fog,\n      sleet,\n      snow,\n      wind,\n      rain\n    ],\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\n    detailsDisplay: true\n  };\n\n  convertUnix = unixTime => {\n    let months = [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ];\n    let days = [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ];\n\n    let date = new Date(unixTime * 1000);\n    let year = date.getFullYear();\n    let month = months[date.getMonth()];\n    let day = date.getDate();\n    let dayOfWeek = days[date.getDay()];\n\n    let currentDate = dayOfWeek + \" \" + day + \". \" + month + \" \" + year + \".\";\n    return currentDate;\n  };\n\n  getIcon = (icon, iconImg) => {\n    switch (icon) {\n      case \"clear-day\":\n        iconImg.src = this.state.forecastItem[0];\n        break;\n      case \"clear-night\":\n        iconImg.src = this.state.forecastItem[2];\n        break;\n      case \"partly-cloudy-day\":\n        iconImg.src = this.state.forecastItem[1];\n        break;\n      case \"partly-cloudy-night\":\n        iconImg.src = this.state.forecastItem[3];\n        break;\n      case \"cloudy\":\n        iconImg.src = this.state.forecastItem[4];\n        break;\n      case \"rain\":\n        iconImg.src = this.state.forecastItem[9];\n        break;\n      case \"sleet\":\n        iconImg.src = this.state.forecastItem[6];\n        break;\n      case \"snow\":\n        iconImg.src = this.state.forecastItem[7];\n        break;\n      case \"wind\":\n        iconImg.src = this.state.forecastItem[8];\n        break;\n      case \"fog\":\n        iconImg.src = this.state.forecastItem[5];\n        break;\n    }\n  };\n\n  toCelsius(degree) {\n    let toCelsius = (((degree - 32) * 5) / 9).toFixed(0);\n    return toCelsius;\n  }\n\n  displayDetails = () => {\n    console.log(\"work\");\n    this.setState({\n      detailsDisplay: !this.state.detailsDisplay\n    });\n  };\n\n  async getTemperatures(lat, long, arr) {\n    try {\n      const api = `${proxy}https://api.darksky.net/forecast/${API_KEY}/${lat},${long}`;\n      const data = await fetch(api);\n      const jsonData = await data.json();\n      console.log(jsonData);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"weather-container\">\n          <DailyTemperature\n            proxy={this.state.proxy}\n            API_KEY={this.state.API_KEY}\n            cities={this.state.cities}\n            getIcon={this.getIcon}\n            forecastItem={this.state.forecastItem}\n            convertUnix={this.convertUnix}\n          />\n          <CurrentTemperature\n            proxy={this.state.proxy}\n            API_KEY={this.state.API_KEY}\n            cities={this.state.cities}\n            getIcon={this.getIcon}\n            displayDetails={this.displayDetails}\n          />\n          <LongTermTemperature\n            proxy={this.state.proxy}\n            API_KEY={this.state.API_KEY}\n            cities={this.state.cities}\n            getIcon={this.getIcon}\n            forecastItem={this.state.forecastItem}\n            convertUnix={this.convertUnix}\n            toCelsius={this.toCelsius}\n          />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from \"react\";\r\nimport clearday from \"./temperature icons/clear-day.svg\";\r\nimport partlycloudyday from \"./temperature icons/partly-cloudy-day.svg\";\r\nimport clearnight from \"./temperature icons/clear-night.svg\";\r\nimport cloudy from \"./temperature icons/cloudy.svg\";\r\nimport partlycloudynight from \"./temperature icons/partly-cloudy-night.svg\";\r\nimport fog from \"./temperature icons/fog.svg\";\r\nimport rain from \"./temperature icons/rain.svg\";\r\nimport sleet from \"./temperature icons/sleet.svg\";\r\nimport snow from \"./temperature icons/snow.svg\";\r\nimport wind from \"./temperature icons/snow.svg\";\r\n\r\nconst ProductContext = React.createContext();\r\n\r\nclass ProductProvider extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    cities: [\r\n      \"Pirot\",\r\n      \"Niš\",\r\n      \"Užice\",\r\n      \"Kragujevac\",\r\n      \"Zaječar\",\r\n      \"Požarevac\",\r\n      \"Beograd\",\r\n      \"Novi Sad\",\r\n      \"Subotica\"\r\n    ],\r\n    forecastItem: [\r\n      clearday,\r\n      partlycloudyday,\r\n      clearnight,\r\n      partlycloudynight,\r\n      cloudy,\r\n      fog,\r\n      sleet,\r\n      snow,\r\n      wind,\r\n      rain\r\n    ]\r\n  };\r\n\r\n\r\n\r\n  convertUnix = unixTime => {\r\n    let months = [\r\n      \"January\",\r\n      \"February\",\r\n      \"March\",\r\n      \"April\",\r\n      \"May\",\r\n      \"June\",\r\n      \"July\",\r\n      \"August\",\r\n      \"September\",\r\n      \"October\",\r\n      \"November\",\r\n      \"December\"\r\n    ];\r\n    let days = [\r\n      \"Sunday\",\r\n      \"Monday\",\r\n      \"Tuesday\",\r\n      \"Wednesday\",\r\n      \"Thursday\",\r\n      \"Friday\",\r\n      \"Saturday\"\r\n    ];\r\n\r\n    let date = new Date(unixTime * 1000);\r\n    let year = date.getFullYear();\r\n    let month = months[date.getMonth()];\r\n    let day = date.getDate();\r\n    let dayOfWeek = days[date.getDay()];\r\n\r\n    let currentDate = dayOfWeek + \" \" + day + \". \" + month + \" \" + year + \".\";\r\n    return currentDate;\r\n  };\r\n  convertUnixHour = unixTime => {\r\n    let date = new Date(unixTime * 1000);\r\n    let hour = date.getHours();\r\n\r\n    if (\r\n      hour == \"0\" ||\r\n      hour == \"1\" ||\r\n      hour == \"2\" ||\r\n      hour == \"3\" ||\r\n      hour == \"4\" ||\r\n      hour == \"5\" ||\r\n      hour == \"6\" ||\r\n      hour == \"7\" ||\r\n      hour == \"8\" ||\r\n      hour == \"9\"\r\n    ) {\r\n      hour = \"0\" + hour;\r\n    }\r\n\r\n    let currentHour = hour;\r\n\r\n    return currentHour;\r\n  };\r\n  toCelsius(degree) {\r\n    let toCelsius = (((degree - 32) * 5) / 9).toFixed(0);\r\n    return toCelsius;\r\n  }\r\n  getForecastIcon = icon => {\r\n    switch (icon) {\r\n      case \"clear-day\":\r\n        return this.state.forecastItem[0];\r\n        break;\r\n      case \"clear-night\":\r\n        return this.state.forecastItem[2];\r\n        break;\r\n      case \"partly-cloudy-day\":\r\n        return this.state.forecastItem[1];\r\n        break;\r\n      case \"partly-cloudy-night\":\r\n        return this.state.forecastItem[3];\r\n        break;\r\n      case \"cloudy\":\r\n        return this.state.forecastItem[4];\r\n        break;\r\n      case \"rain\":\r\n        return this.state.forecastItem[9];\r\n        break;\r\n      case \"sleet\":\r\n        return this.state.forecastItem[6];\r\n        break;\r\n      case \"snow\":\r\n        return this.state.forecastItem[7];\r\n        break;\r\n      case \"wind\":\r\n        return this.state.forecastItem[8];\r\n        break;\r\n      case \"fog\":\r\n        return this.state.forecastItem[5];\r\n        break;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <ProductContext.Provider\r\n        value={{\r\n          ...this.state,\r\n          convertUnix: this.convertUnix,\r\n          toCelsius: this.toCelsius,\r\n          getForecastIcon: this.getForecastIcon,\r\n          convertUnixHour: this.convertUnixHour,\r\n          getTemperatures: this.getTemperatures\r\n        }}\r\n      >\r\n        {this.props.children}\r\n      </ProductContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ProductConsumer = ProductContext.Consumer;\r\n\r\nexport { ProductConsumer, ProductProvider };\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class hourly extends Component {\r\n  render() {\r\n    const { time, icon, temperature } = this.props.hour;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div>\r\n            <h5 className=\"hour-time\">{value.convertUnixHour(time)} h</h5>\r\n            <img\r\n              id=\"hourly-icon\"\r\n              src={value.getForecastIcon(icon)}\r\n              alt=\"no picture\"\r\n            />\r\n            <h5 className=\"temp-celsius\">{value.toCelsius(temperature)} C</h5>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\n\r\nexport default class daily extends Component {\r\n  render() {\r\n    const {\r\n      time,\r\n      icon,\r\n      temperatureMin,\r\n      temperatureMax,\r\n      summary\r\n    } = this.props.day;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"day-temp\">\r\n            <h6>{value.convertUnix(time)}</h6>\r\n            <div className=\"long-temp\">\r\n              <img\r\n                id=\"long-icon\"\r\n                src={value.getForecastIcon(icon)}\r\n                alt=\"no picture\"\r\n              />\r\n              <p className=\"long-max\">\r\n                <span style={{ color: \"red\" }}>\r\n                  {value.toCelsius(temperatureMax)} C\r\n                </span>\r\n                <span> max</span>\r\n              </p>\r\n              <p className=\"long-min\">\r\n                <span style={{ color: \"green\" }}>\r\n                  {value.toCelsius(temperatureMin)} C\r\n                </span>\r\n                <span> min</span>\r\n              </p>\r\n              <h6 style={{ marginTop: \"10px\", color: \"black\" }}>{summary}</h6>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"./../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.15306, 22.58611`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[0]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.32472, 21.90333`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[1]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.85861, 19.84878`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[2]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.01667, 20.91667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[3]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/43.90358, 22.26405`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[4]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.62133, 21.18782`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[5]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/44.80401, 20.46513`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[6]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/45.25167, 19.83694`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[7]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./details.css\";\r\nimport Hourly from \"./hourly.js\";\r\nimport Daily from \"./daily.js\";\r\nimport { ProductConsumer } from \"../../Context.js\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class detailsPirot extends Component {\r\n  state = {\r\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\r\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\",\r\n    temperature: \"\",\r\n    summary: \"\",\r\n    icon: \"\",\r\n    temperatureMin: \"\",\r\n    temperatureMax: \"\",\r\n    time: \"\",\r\n    hourlyTemp: [],\r\n    dailyTemp: []\r\n  };\r\n  async getTemperatures() {\r\n    try {\r\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/46.1, 19.66667`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n\r\n      const { temperature, summary, icon, time } = jsonData.currently;\r\n      const { temperatureMin, temperatureMax } = jsonData.daily.data[0];\r\n\r\n      // next 5 hours temperatures \r\n      let hour1 = jsonData.hourly.data[0];\r\n      let hour2 = jsonData.hourly.data[1];\r\n      let hour3 = jsonData.hourly.data[2];\r\n      let hour4 = jsonData.hourly.data[3];\r\n      let hour5 = jsonData.hourly.data[4];\r\n\r\n\r\n      let hourlyTemp = [\r\n        {\r\n          id: 1,\r\n          time: hour1.time,\r\n          icon: hour1.icon,\r\n          temperature: hour1.temperature\r\n        },\r\n        {\r\n          id: 2,\r\n          time: hour2.time,\r\n          icon: hour2.icon,\r\n          temperature: hour2.temperature\r\n        },\r\n        {\r\n          id: 3,\r\n          time: hour3.time,\r\n          icon: hour3.icon,\r\n          temperature: hour3.temperature\r\n        },\r\n        {\r\n          id: 4,\r\n          time: hour4.time,\r\n          icon: hour4.icon,\r\n          temperature: hour4.temperature\r\n        },\r\n        {\r\n          id: 5,\r\n          time: hour5.time,\r\n          icon: hour5.icon,\r\n          temperature: hour5.temperature\r\n        }\r\n      ];\r\n      \r\n      // next 5 days temperatures \r\n      let day1 = jsonData.daily.data[1];\r\n      let day2 = jsonData.daily.data[2];\r\n      let day3 = jsonData.daily.data[3];\r\n      let day4 = jsonData.daily.data[4];\r\n      let day5 = jsonData.daily.data[5];\r\n\r\n\r\n      let dailyTemp = [\r\n        {\r\n          id: 1,\r\n          time: day1.time,\r\n          icon: day1.icon,\r\n          temperatureMin: day1.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day1.summary\r\n        },\r\n        {\r\n          id: 2,\r\n          time: day2.time,\r\n          icon: day2.icon,\r\n          temperatureMin: day2.temperatureMin,\r\n          temperatureMax: day2.temperatureMax,\r\n          summary: day2.summary\r\n        },\r\n        {\r\n          id: 3,\r\n          time: day3.time,\r\n          icon: day3.icon,\r\n          temperatureMin: day3.temperatureMin,\r\n          temperatureMax: day3.temperatureMax,\r\n          summary: day3.summary\r\n        },\r\n        {\r\n          id: 4,\r\n          time: day4.time,\r\n          icon: day4.icon,\r\n          temperatureMin: day4.temperatureMin,\r\n          temperatureMax: day1.temperatureMax,\r\n          summary: day4.summary\r\n        },\r\n        {\r\n          id: 5,\r\n          time: day5.time,\r\n          icon: day5.icon,\r\n          temperatureMin: day5.temperatureMin,\r\n          temperatureMax: day5.temperatureMax,\r\n          summary: day5.summary\r\n        }\r\n      ];\r\n\r\n      this.setState({\r\n        temperature: temperature,\r\n        summary: summary,\r\n        icon: icon,\r\n        temperatureMin: temperatureMin,\r\n        temperatureMax: temperatureMax,\r\n        time: time,\r\n        hourlyTemp: hourlyTemp,\r\n        dailyTemp: dailyTemp\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures();\r\n  }\r\n  render() {\r\n    const {\r\n      summary,\r\n      temperature,\r\n      icon,\r\n      temperatureMax,\r\n      temperatureMin,\r\n      time,\r\n      hourlyTemp,\r\n      dailyTemp\r\n    } = this.state;\r\n    return (\r\n      <ProductConsumer>\r\n        {value => (\r\n          <div className=\"detailForecast\">\r\n            <h2 className=\"dateCurrently\">\r\n              {value.cities[8]}, {value.convertUnix(time)}\r\n            </h2>\r\n\r\n            <hr />\r\n            <div className=\"daily\">\r\n              <div className=\"summ\">\r\n                <img id=\"iconCurr\" src={value.getForecastIcon(icon)} />\r\n                <h4 id=\"summ-text\">{summary}</h4>\r\n              </div>\r\n              <h5 className=\"currentlyTemp\">\r\n                {value.toCelsius(temperature)} C\r\n              </h5>\r\n              <h5 className=\"maxTemp\">\r\n                <span id=\"max\">{value.toCelsius(temperatureMax)} C</span>\r\n                <span id=\"text\">MAX</span>\r\n              </h5>\r\n              <h5 className=\"minTemp\">\r\n                <span id=\"min\">{value.toCelsius(temperatureMin)} C</span>\r\n                <span id=\"text\">MIN</span>\r\n              </h5>\r\n            </div>\r\n\r\n            <div className=\"hourlyTemp\">\r\n              {hourlyTemp.map(hour => (\r\n                <Hourly key={hour.id} hour={hour} />\r\n              ))}\r\n            </div>\r\n\r\n            <div className=\"dailyTemp\">\r\n            {dailyTemp.map(day => (\r\n                <Daily key={day.id} day={day} />\r\n              ))}              \r\n            </div>\r\n\r\n            <Link to=\"/Home\">back to main menu</Link>\r\n          </div>\r\n        )}\r\n      </ProductConsumer>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar.js\";\r\nimport Home from \"./Home.js\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport DetailsPirot from \"./components/Detail Forecast/detailsPirot.js\";\r\nimport DetailsNis from \"./components/Detail Forecast/detailsNis.js\";\r\nimport DetailsUzice from \"./components/Detail Forecast/detailsUzice.js\";\r\nimport DetailsKragujevac from \"./components/Detail Forecast/detailsKragujevac.js\";\r\nimport DetailsZajecar from \"./components/Detail Forecast/detailsZajecar.js\";\r\nimport DetailsPozarevac from \"./components/Detail Forecast/detailsPozarevac.js\";\r\nimport DetailsBeograd from \"./components/Detail Forecast/detailsBeograd.js\";\r\nimport DetailsNoviSad from \"./components/Detail Forecast/detailsNoviSad.js\";\r\nimport DetailsSubotica from \"./components/Detail Forecast/detailsSubotica.js\";\r\n\r\nexport default class App1 extends Component {\r\n  state = {\r\n    displayHomePage: true\r\n  };\r\n  displayDetails = () => {\r\n    this.setState({\r\n      displayHomePage: false\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar displayDetails={this.displayDetails} />\r\n\r\n        {this.state.displayHomePage ? (\r\n          <Home />\r\n        ) : (\r\n          <Switch>\r\n            <Route exath path=\"/home\" component={Home} />\r\n            <Route path=\"/detailsPirot\" component={DetailsPirot} />\r\n            <Route path=\"/detailsNis\" component={DetailsNis} />\r\n            <Route path=\"/detailsUzice\" component={DetailsUzice} />\r\n            <Route path=\"/detailsKragujevac\" component={DetailsKragujevac} />\r\n            <Route path=\"/detailsZajecar\" component={DetailsZajecar} />\r\n            <Route path=\"/detailsPozarevac\" component={DetailsPozarevac} />\r\n            <Route path=\"/detailsBeograd\" component={DetailsBeograd} />\r\n            <Route path=\"/detailsNoviSad\" component={DetailsNoviSad} />\r\n            <Route path=\"/detailsSubotica\" component={DetailsSubotica} />\r\n          </Switch>\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ProductProvider } from \"./Context\";\n\nReactDOM.render(\n  <ProductProvider>\n    <Router>\n      <App />\n    </Router>\n  </ProductProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}