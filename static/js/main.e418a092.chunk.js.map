{"version":3,"sources":["components/Current Temperature/serbia.png","components/Navbar.js","components/Current Temperature/CurrentTemperature.js","components/Daily Temperature/DailyTemperature.js","components/Long Term Temperature/LongTermTemperature.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Navbar","react_default","a","createElement","className","Component","CurrentTemperature","lat","long","temp","icons","api","this","props","proxy","API_KEY","fetch","data","json","jsonData","console","log","currently","temperature","icon","temperatureC","toFixed","document","getElementById","textContent","result","innerHTML","_context","t0","getTemperatures","_this","src","SerbiaMap","alt","id","onClick","getPosition","DailyTemperature","LongTermTemperature","App","state","cities","pirot","temperatures","setPosition","Fragment","Navbar_Navbar","DailyTemperature_DailyTemperature","CurrentTemperature_CurrentTemperature","LongTermTemperature_LongTermTemperature","Boolean","window","location","hostname","match","ReactDOM","render","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e418a092.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/serbia.82ff3005.png\";","import React, { Component } from \"react\";\r\n\r\nexport default class Navbar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"navbar\">\r\n        <i className=\"fas fa-bolt\"></i>\r\n        <i className=\"fas fa-cloud-sun\"></i>\r\n        <i className=\"fas fa-cloud-showers-heavy\"></i>\r\n        <h2>Weather Forecast for Serbia</h2>\r\n        <i className=\"fas fa-cloud-rain\"></i>\r\n        <i className=\"fas fa-sun\"></i>\r\n        <i className=\"fas fa-cloud-moon\"></i>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport SerbiaMap from \"./serbia.png\";\r\nimport \"./CurrentTemperature.css\";\r\n\r\nexport default class CurrentTemperature extends Component {\r\n  async getTemperatures(lat, long, temp, icons) {\r\n    try {\r\n      const api = `${this.props.proxy}https://api.darksky.net/forecast/${this.props.API_KEY}/${lat},${long}`;\r\n      const data = await fetch(api);\r\n      const jsonData = await data.json();\r\n      console.log(jsonData);\r\n\r\n      const { temperature, icon } = jsonData.currently;\r\n\r\n      let temperatureC = (((temperature - 32) * 5) / 9).toFixed(0);\r\n\r\n      document.getElementById(temp).textContent = temperatureC;\r\n\r\n      let result = `<img src=\"./../temperature icons/${icon}.svg\" alt=\"no picture\" />`;\r\n      \r\n      document.getElementById(icons).innerHTML = result;\r\n      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getTemperatures(43.15306, 22.58611, \"temPirot\", \"iconPirot\");\r\n    this.getTemperatures(43.32472, 21.90333, \"temNis\", \"iconNis\");\r\n    this.getTemperatures(43.85861, 19.84878, \"temUzice\", \"iconUzice\");\r\n    this.getTemperatures(44.01667, 20.91667, \"temKragujevac\", \"iconKragujevac\");\r\n    this.getTemperatures(43.90358, 22.26405, \"temZajecar\", \"iconZajecar\");\r\n    this.getTemperatures(44.62133, 21.18782, \"temPozarevac\", \"iconPozarevac\");\r\n    this.getTemperatures(44.80401, 20.46513, \"temBeograd\", \"iconBeograd\");\r\n    this.getTemperatures(45.25167, 19.83694, \"temNoviSad\", \"iconNoviSad\");\r\n    this.getTemperatures(46.1, 19.66667, \"temSubotica\", \"iconSubotica\");\r\n  }\r\n  render() {\r\n    return (\r\n      // map with 9 cities and it's temperature\r\n      <div className=\"map-content\">\r\n        <img className=\"img-pos\" src={SerbiaMap} alt=\"serbia map\" />\r\n        <ul>\r\n          {/* forecast Pirot */}\r\n          <li\r\n            id=\"pirot\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getTemperatures(43.15306, 22.58611)}\r\n          >\r\n            <h4>Pirot</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconPirot\" src={rain} alt=\"\" />*/}\r\n              <span id=\"iconPirot\"></span>\r\n              <h3 id=\"temPirot\" className=\"temperature-degree\">\r\n                35\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Niš */}\r\n          <li\r\n            id=\"nis\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(43.32472, 21.90333)}\r\n          >\r\n            <h4>Niš</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconNis\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconNis\"></span>\r\n              <h3 id=\"temNis\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Užice */}\r\n          <li\r\n            id=\"uzice\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(43.85861, 19.84878)}\r\n          >\r\n            <h4>Užice</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconUzice\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconUzice\"></span>\r\n              <h3 id=\"temUzice\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Kragujevac */}\r\n          <li\r\n            id=\"kragujevac\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(44.01667, 20.91667)}\r\n          >\r\n            <h4>Kragujevac</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconKragujevac\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconKragujevac\"></span>\r\n              <h3 id=\"temKragujevac\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Zaječar */}\r\n          <li\r\n            id=\"zajecar\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(43.90358, 22.26405)}\r\n          >\r\n            <h4>Zaječar</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconZajecar\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconZajecar\"></span>\r\n              <h3 id=\"temZajecar\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Požarevac */}\r\n          <li\r\n            id=\"pozarevac\"\r\n            className=\"city-pos\"\r\n            onClick={() => getPosition(44.62133, 21.18782)}\r\n          >\r\n            <h4>Požarevac</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconPozarevac\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconPoyarevac\"></span>\r\n              <h3 id=\"temPozarevac\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Beograd */}\r\n          <li\r\n            id=\"beograd\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(44.80401, 20.46513)}\r\n          >\r\n            <h4 id=\"bg\">Beograd</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconBeograd\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconBeograd\"></span>\r\n              <h3 id=\"temBeograd\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Novi Sad */}\r\n          <li\r\n            id=\"novi-sad\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(45.25167, 19.83694)}\r\n          >\r\n            <h4>Novi Sad</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconNoviSad\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconNoviSad\"></span>\r\n              <h3 id=\"temNoviSad\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n          {/* forecast Subotica */}\r\n          <li\r\n            id=\"subotica\"\r\n            className=\"city-pos\"\r\n            onClick={() => this.getPosition(46.1, 19.66667)}\r\n          >\r\n            <h4>Subotica</h4>\r\n            <div className=\"temperature-content\">\r\n              {/*<img id=\"iconSubotica\" src=\"\" alt=\"\" />*/}\r\n              <span id=\"iconSubotica\"></span>\r\n              <h3 id=\"temSubotica\" className=\"temperature-degree\">\r\n                30\r\n              </h3>\r\n              <span>C</span>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./DailyTemperature.css\";\r\n\r\nexport default class DailyTemperature extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"current-temperatures\">\r\n        <h2 className=\"currDate\">10.07.2019.</h2>\r\n        <hr></hr>\r\n        <p>This is daily temperature component</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./LongTermTemperature.css\";\r\n\r\nexport default class LongTermTemperature extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"long-temperature\">\r\n        <div className=\"long-temp\">\r\n          <hr></hr>\r\n          <h4 className=\"dayFirst\">27</h4>\r\n          <hr></hr>\r\n          <h4 className=\"daySecond\">28</h4>\r\n          <hr></hr>\r\n          <h4 className=\"dayThird\">28</h4>\r\n          <hr></hr>\r\n        </div>\r\n        <p>This is long term temperature component</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\nimport \"./forecast.css\";\nimport Navbar from \"./components/Navbar.js\";\nimport CurrentTemperature from \"./components/Current Temperature/CurrentTemperature.js\";\nimport DailyTemperature from \"./components/Daily Temperature/DailyTemperature.js\";\nimport LongTermTemperature from \"./components/Long Term Temperature/LongTermTemperature.js\";\n\nclass App extends Component {\n  state = {\n    cities: [\n      \"Pirot\",\n      ,\n      \"Niš\",\n      \"Užice\",\n      \"Kragujevac\",\n      \"Zaječar\",\n      \"Požarevac\",\n      \"Beograd\",\n      \"Novi Sad\",\n      \"Subotica\"\n    ],\n    pirot: {},\n    temperatures: [],\n    proxy: \"http://cors-anywhere.herokuapp.com/\",\n    API_KEY: \"fb4c116f915c61742654d62a921fffa2\"\n  };\n\n  async getTemperatures(lat, long) {\n    try {\n      const api = `${this.state.proxy}https://api.darksky.net/forecast/${this.state.API_KEY}/${lat},${long}`;\n      const data = await fetch(api);\n      const jsonData = await data.json();\n      console.log(jsonData);\n\n      const { temperature, icon } = jsonData.currently;\n\n      console.log(temperature, icon);\n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n  componentDidMount() {\n    this.setPosition();\n  }\n\n  setPosition = () => {\n    let pirot = this.getTemperatures(43.15306, 22.58611);\n    console.log(pirot);\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <Navbar />\n        <div className=\"weather-container\">\n          <DailyTemperature />\n          <CurrentTemperature\n            proxy={this.state.proxy}\n            API_KEY={this.state.API_KEY}\n          />\n          <LongTermTemperature />\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}